# Copyright (C) 2002-2021 CERN for the benefit of the ATLAS collaboration

ARCH_LOC_1 := $(wildcard $(shell root-config --prefix)/etc/Makefile.arch)
ARCH_LOC_2 := $(wildcard $(shell root-config --prefix)/test/Makefile.arch)
ARCH_LOC_3 := $(wildcard $(shell root-config --prefix)/share/root/test/Makefile.arch)
# ARCH_LOC_3 := $(wildcard $(shell root-config --prefix)/share/doc/root/test/Makefile.arch)
ifneq ($(strip $(ARCH_LOC_1)),)
  $(info Using $(ARCH_LOC_1))
  include $(ARCH_LOC_1)
else
  ifneq ($(strip $(ARCH_LOC_2)),)
    $(info Using $(ARCH_LOC_2))
    include $(ARCH_LOC_2)
  else
    ifneq ($(strip $(ARCH_LOC_3)),)
      $(info Using $(ARCH_LOC_3))
      include $(ARCH_LOC_3)
    else
      $(error Could not find Makefile.arch! ROOT not set up?)
    endif
  endif
endif

rootversion := $(shell root-config --version | cut -c1)

ROOTBIN := $(shell root-config --bindir)
ROOTLIB := $(shell root-config --libdir)
ROOTLIBS := $(shell root-config --libs)
ROOTINC := $(shell root-config --incdir)

# -------------------------------------------------------------
# General flags
# -------------------------------------------------------------
PACKAGE    = BootstrapGenerator
OUTPUTDIR  = ../StandAlone

# These warnings bother me, so I turn them off.
CXXFLAGS += -DBOOTSTRAPGENERATOR_STANDALONE -msse2

# add utils subdirectories if needed
INCLUDES   += -I.. -I${ROOTINC}

# Need these to avoid loading dependent libraries when ROOT starts
LINKLIBS = -L${ROOTLIB} -lHist -lMatrix -lCore -lCint -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lTree -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -pthread -lm -ldl -rdynamic

# -------------------------------------------------------------
# ROOT Cint
# -------------------------------------------------------------
CINT       = BootstrapGeneratorCint
LDEFFILE   = ../Root/LinkDef.h
CINTFILE   = $(OUTPUTDIR)/BootstrapGeneratorCint.cxx
CINTOBJ    = $(patsubst %.cxx,%.o,$(CINTFILE))

# -------------------------------------------------------------
# ProofAna source
# -------------------------------------------------------------
# add util subdirectories if needed
CINTCXXLIST = ../Root/BootstrapGenerator.cxx ../Root/TH1Bootstrap.cxx ../Root/TH2Bootstrap.cxx ../Root/TH3Bootstrap.cxx $(CINTFILE)
CINTHLIST   = ../BootstrapGenerator/BootstrapGenerator.h ../BootstrapGenerator/TH1Bootstrap.h ../BootstrapGenerator/TH2Bootstrap.h ../BootstrapGenerator/TH3Bootstrap.h
CXXLIST = $(wildcard ../Root/*.cxx) $(CINTFILE)
HLIST   = $(wildcard ../$(PACKAGE)/*.h)
OLIST   = $(patsubst %.cxx,%.o,$(CXXLIST))
DLIST   = $(patsubst %.h,%.d,$(HLIST))


# -------------------------------------------------------------
# Libraries
# -------------------------------------------------------------
LIBFILE  = $(OUTPUTDIR)/libBootstrapGenerator.so
MAPFILE  = $(OUTPUTDIR)/libBootstrapGenerator.rootmap

ifeq ($(PLATFORM),macosx)
EXTRALDFLAGS = -install_name $(LIBFILE)
endif

# get libraries of ROOT
define ldlinksuffixROOT
   $(addsuffix $(LDLINKSUFFIX),$(Lib)) $(shell if [ "$(findstring -Ldlink2,$(OPTIONS))" ]; then echo $(addsuffix _pkgid_$(ROOTVER),$(Lib)); fi)
endef

# -------------------------------------------------------------
# Compilation
# -------------------------------------------------------------

default: shlib rlibmap

# Implicit rule to compile all classes
%.o : %.cxx
	@echo "Compiling $<"
	@$(CXX) -MD $(CXXFLAGS) $(INCLUDES) -c $< -o $*.o 

# Rule to make ROOTCINT output file
$(CINTOBJ) : $(CINTHLIST) $(LDEFFILE)
	@echo "Running rootcint"
	@$(ROOTBIN)/rootcint -f $(CINTFILE) -c -p  $(CXXFLAGS) $(INCLUDES) $(CINTHLIST) $(LDEFFILE)
	@echo "Compiling $(CINTFILE)"
	@$(CXX) $(CXXFLAGS) $(INCLUDES) -c $(CINTFILE) -o $@

rootcint : $(CINTHLIST) $(LDEFFILE)
	@echo "Running rootcint"
	$(ROOTBIN)/rootcint -f $(CINTFILE) -c -p  $(CXXFLAGS) $(INCLUDES) $(CINTHLIST) $(LDEFFILE)

# Rule to make ROOT library map for hadd'ing new classes
rlibmap: $(LIBFILE)
	@echo "Running rlibmap"
ifeq ($(rootversion),6)
	@${ROOTSYS}/bin/rootcling -f dict$(PACKAGE).cxx -rml $(LIBFILE) -rmf $(MAPFILE) $(INCLUDES) $(LDEFFILE)
	@rm -f dict$(PACKAGE)*
else
	@$(ROOTSYS)/bin/rlibmap -o $(MAPFILE) -l $(LIBFILE) -d -c $(LDEFFILE)
endif

# Rule to combine objects into a shared library
$(LIBFILE): $(OLIST)
	@echo "Linking $(LIBFILE)"
	@rm -f $(LIBFILE)
	@$(LD) $(CXXFLAGS) $(SOFLAGS) $(ROOTLIBS) $(EXTRALDFLAGS) $(OLIST) -o $(LIBFILE) 

-include $(DLIST)

BootstrapGeneratorCint: $(CINTOBJ)
shlib: $(LIBFILE)

clean:
	@rm -f ../*/*.o ../*/*.d ../*/*.so ../*/*.rootmap
	



